require "../api.d"
require "./generator"
require "io"

class EnumGenerator < Generator
  def generate(rbx_enums : Array(API::Enum)) : Nil
    write "# THIS FILE IS AUTOMATICALLY GENERATED AND SHOULD NOT BE EDITED MANUALLY!"
    write "# GENERATED ROBLOX ENUMS"
    write ""
    write "module EnumItem; end"
    write ""
    write "module Enum"
    push_indent

    rbx_enums.each do |rbx_enum|
      enum_type_name = rbx_enum.name
      enum_type_items = rbx_enum.items
      item_names = [] of String

      write "module #{enum_type_name}"
      push_indent

      enum_type_items.each do |item|
        item_name = item.name.camelcase
        item_value = item.value.to_i32
        item_legacy_names = item.legacy_names || [] of String

        item_names << item.name
        write "module #{item_name}"
        push_indent

        write "include EnumItem"
        write "Name = \"#{item_name}\""
        write "Value = #{item_value}"
        write "EnumType = #{enum_type_name}"

        pop_indent
        write "end"
        write "" unless item === enum_type_items.last
      end

      enum_union = !item_names.empty? ?
        (item_names.map { |item_name| "#{item_name}" }.join " | ")
        : "Nil"

      pop_indent
      write "end"
      write "" unless rbx_enum === rbx_enums.last
    end

    pop_indent
    write "end"

    write_file
  end
end
